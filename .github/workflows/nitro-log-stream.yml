name: Build oyster-nitro-logger
on:
  workflow_dispatch:
   inputs:
    oyster-nitro-logger-version:
     description: 'oyster-nitro-logger version'
#      required: false
     default: 'vX.Y.Z-beta.U'
jobs:
  build_linux:
    name: Build oyster-nitro-logger linux
    strategy:
      matrix:
        include:
        - os: 'ubuntu-24.04'
          runs-on: 'ubicloud-standard-8'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
          rust-image: 'ed7795c6eaccae53be35939e883e8c3de0197b21e8eddbd9f04b0c4bc757c094'
          target: x86_64-unknown-linux-musl
        - os: 'ubuntu-24.04'
          runs-on: 'ubicloud-standard-8-arm'
          build_type: Release
          GOOS: linux
          GOARCH: arm64
          rust-image: 'c428882ff081342a9661fb13a1d059ecdc0b6e979ffec64b80371cf20a2088b0'
          target: aarch64-unknown-linux-musl
    runs-on: ${{ matrix.runs-on }}
    outputs:
      oyster-nitro-logger-checksum: ${{steps.oyster-nitro-logger.outputs.checksum}}
    steps:
    - name: echo
      run: |
        echo oyster-nitro-logger-version ${{github.event.inputs.oyster-nitro-logger-version}}
    - name: clone
      run: rm -rf oyster-nitro-logger && git clone https://github.com/marlinprotocol/oyster-nitro-logger
    - name: checkout
      run: cd oyster-nitro-logger && git checkout master
    - name: build
      run: cd oyster-nitro-logger && sudo docker run --rm -v `pwd`:/code rust@sha256:${{matrix.rust-image}} /code/build-${{matrix.GOARCH}}.sh
    - name: upload oyster-nitro-logger
      id: oyster-nitro-logger
      if: ${{github.event.inputs.oyster-nitro-logger-version != 'vX.Y.Z-beta.U'}}
      run: |
        AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}} AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}} aws s3 cp --endpoint-url ${{secrets.AWS_S3_ENDPOINT}} oyster-nitro-logger/target/${{ matrix.target }}/release/logger s3://artifacts/oyster/binaries/nitro-logger_${{github.event.inputs.oyster-nitro-logger-version}}_${{matrix.GOOS}}_${{matrix.GOARCH}}
