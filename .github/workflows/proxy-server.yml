name: Build proxy-server
on:
  workflow_dispatch:
   inputs:
    proxy-server-version:
     description: 'proxy server version'
#      required: false
#      default: 'X.Y.Z-beta.U'
jobs:
  echo_input:
    name: display input params
    strategy:
      matrix:
        include:
        - os: 'ubuntu-20.04'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
    runs-on: ${{ matrix.os }}
    steps:
    - name: echo
      run: |
        echo proxy-server-version ${{github.event.inputs.proxy-server-version}}
  build_proxy_server_linux:
    name: Build proxy server linux
    strategy:
      matrix:
        include:
        - os: 'ubuntu-20.04'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
    runs-on: ${{ matrix.os }}
    env:
      CC: /usr/bin/clang-10
      CXX: /usr/bin/clang++-10
    outputs:
      supervisord-checksum: ${{steps.proxy-server.outputs.checksum}}
    steps:
    - name: clone
      run: git clone -c remote.origin.fetch=refs/remotes/hyn9temqxfjts7ogeoet69brw376rbe3yfpfmf59w89a69k3najqya/heads/*:refs/remotes/canonical/* https://radicle.lsqtech.org/hnrkbzyhu3eosmpsh3q89b3ntubmztx447tey proxy-server
    - name: checkout
      run: cd proxy-server && git checkout canonical/master
    - name: build
      run: cd proxy-server && go get && go build
    - name: aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: upload proxy-server
      id: proxy-server
#       if: ${{github.event.inputs.proxy-server-version != 'X.Y.Z-beta.U'}}
      run: |
        echo "::set-output name=checksum::$(md5sum proxy-server/proxy-server | awk '{print $1;}')"
        aws s3 cp proxy-server/proxy-server s3://public.artifacts.marlin.pro/projects/enclaves/proxy-server_${{github.event.inputs.proxy-server-version}}_${{matrix.GOOS}}_${{matrix.GOARCH}}
