name: Build OpenWeaver
on:
  workflow_dispatch:
   inputs:
    beacon-version:
     description: 'beacon binary version'
     required: false
     default: 'nil'
    eth_relay-version:
     description: 'eth_relay binary version'
     required: false
     default: 'nil'
    gateway_eth-version:
     description: 'gateway_eth binary version'
     required: false
     default: 'nil'
    near_gateway-version:
     description: 'near_gateway binary version'
     required: false
     default: 'nil'
    iris_bridge-version:
     description: 'iris_bridge binary version'
     required: false
     default: 'nil'
jobs: 
  build_openweaver_linux:
    name: Build openWeaver linux
    strategy:
      matrix:
        include:
        - os: 'ubuntu-18.04'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
      with:
        ref: master
        repository: marlinprotocol/OpenWeaver
        submodules: recursive
    - name: install doxygen
      run: sudo apt-get install doxygen
    - name: install graphviz dot
      run: sudo apt install graphviz
    - name: Build folder
      run: mkdir build
    - name: CMake
      run: cd build && cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: Make beacon
      if: ${{github.event.inputs.beacon-version != 'nil'}}
      run: |
        cd build && make -j4 beacon_all
        mv beacon/beacon beacon/beacon-${{matrix.GOOS}}_${{matrix.GOARCH}}
        aws s3 cp beacon/beacon-${{matrix.GOOS}}_${{matrix.GOARCH}} s3://beta.artifacts.marlin.pro/projects/beacon/${{github.event.inputs.beacon-version}}
    - name: Make eth_relay
      if: ${{github.event.inputs.eth_relay-version != 'nil'}}
      run: |
        cd build && make -j4 eth_relay
        mv relay/eth_relay relay/eth_relay-${{matrix.GOOS}}_${{matrix.GOARCH}}
        aws s3 cp relay/eth_relay-${{matrix.GOOS}}_${{matrix.GOARCH}} s3://beta.artifacts.marlin.pro/projects/eth_relay/${{github.event.inputs.eth_relay-version}}
    - name: Make gateway_eth
      if: ${{github.event.inputs.gateway_eth-version != 'nil'}}
      run: |
        cd build && make -j4 onramp-eth
        mv integrations/eth/onramp_eth integrations/eth/gateway_eth-${{matrix.GOOS}}_${{matrix.GOARCH}}
        aws s3 cp integrations/eth/gateway_eth-${{matrix.GOOS}}_${{matrix.GOARCH}} s3://beta.artifacts.marlin.pro/projects/gateway_eth/${{github.event.inputs.gateway_eth-version}}
    - name: Make near_gateway
      if: ${{github.event.inputs.near_gateway-version != 'nil'}}
      run: |
        cd build && make -j4 near_gateway
        mv integrations/near/near_gateway integrations/near/near_gateway-${{matrix.GOOS}}_${{matrix.GOARCH}}
        aws s3 cp integrations/near/near_gateway-${{matrix.GOOS}}_${{matrix.GOARCH}} s3://beta.artifacts.marlin.pro/projects/near_gateway/${{github.event.inputs.near_gateway-version}}
    - name: Make iris_bridge
      if: ${{github.event.inputs.iris_bridge-version != 'nil'}}
      run: |
        cd build && make -j4 iris_bridge
        mv multicastsdk/iris_bridge multicastsdk/iris_bridge-${{matrix.GOOS}}_${{matrix.GOARCH}}
        aws s3 cp multicastsdk/iris_bridge-${{matrix.GOOS}}_${{matrix.GOARCH}} s3://beta.artifacts.marlin.pro/projects/iris_bridge/${{github.event.inputs.iris_bridge-version}}
