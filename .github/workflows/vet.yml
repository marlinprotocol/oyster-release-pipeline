name: Build vet
on:
  workflow_dispatch:
   inputs:
    vet-version:
     description: 'vet version'
#      required: false
#      default: 'X.Y.Z-beta.U'
jobs:
  build_vet_linux:
    name: Build vet linux
    strategy:
      matrix:
        include:
        - os: 'ubuntu-22.04'
          runs-on: 'ubuntu-22.04'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
          target: x86_64-unknown-linux-musl
        - os: 'ubuntu-22.04'
          runs-on: self-hosted
          build_type: Release
          GOOS: linux
          GOARCH: arm64
          target: aarch64-unknown-linux-musl
    runs-on: ${{ matrix.runs-on }}
    outputs:
      vet-checksum: ${{steps.vet.outputs.checksum}}
    steps:
    - name: echo
      run: |
        echo vet-version ${{github.event.inputs.vet-version}}
    - name: setup rust
      run: rustup update && rustup target add ${{ matrix.target }}
    - name: clone
      run: rm -rf vet && git clone https://github.com/marlinprotocol/vet
    - name: checkout
      run: cd vet && git checkout master
    - name: build
      run: cd vet && cargo build --release --target ${{ matrix.target }}
    - name: aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: upload vet
      id: vet
#       if: ${{github.event.inputs.vet-version != 'X.Y.Z-beta.U'}}
      run: |
        echo "::set-output name=checksum::$(md5sum vet/target/${{ matrix.target }}/release/vet | awk '{print $1;}')"
        upx vet/target/${{ matrix.target }}/release/vet
        aws s3 cp vet/target/${{ matrix.target }}/release/vet s3://public.artifacts.marlin.pro/projects/enclaves/vet_${{github.event.inputs.vet-version}}_${{matrix.GOOS}}_${{matrix.GOARCH}}
