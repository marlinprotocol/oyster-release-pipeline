name: Build Enclave Builder
on:
  workflow_dispatch:
   inputs:
    enclave-builder-version:
     description: 'enclave builder version'
jobs:
  build_enclave_builder_linux:
    name: Build Enclave builder linux
    strategy:
      matrix:
        include:
        - os: 'ubuntu-22.04'
          runs-on: 'ubuntu-22.04'
          build_type: Release
          GOOS: linux
          GOARCH: amd64
          ARCH_LOWER: x86_64
          ARCH_UPPER: X86_64
          MUSL_TOOLCHAIN_TYPE: native
        - os: 'ubuntu-22.04'
          runs-on: 'ubuntu-22.04'
          build_type: Release
          GOOS: linux
          GOARCH: arm64
          ARCH_LOWER: aarch64
          ARCH_UPPER: AARCH64
          MUSL_TOOLCHAIN_TYPE: cross
          CFLAGS: -mno-outline-atomics
    runs-on: ${{ matrix.os }}
    outputs:
      enclave-builder-checksum: ${{steps.enclave-builder.outputs.checksum}}
    steps:
    - name: set env var
      run: echo "CARGO_BUILD_TARGET=${{matrix.ARCH_LOWER}}-unknown-linux-musl" >> $GITHUB_ENV
    - name: set env var
      run: echo "MUSL_TOOLCHAIN_NAME=${{matrix.ARCH_LOWER}}-linux-musl" >> $GITHUB_ENV
    - name: set env var
      run: echo "HOST_CC=gcc" >> $GITHUB_ENV
    - name: set env var
      run: echo "TARGET_CC=$GITHUB_WORKSPACE/$MUSL_TOOLCHAIN_NAME-${{matrix.MUSL_TOOLCHAIN_TYPE}}/bin/$MUSL_TOOLCHAIN_NAME-gcc" >> $GITHUB_ENV
    - name: set env var
      run: echo "CC_${{matrix.ARCH_LOWER}}_unknown_linux_musl=$TARGET_CC" >> $GITHUB_ENV
    - name: set env var
      run: echo "CARGO_TARGET_${{matrix.ARCH_UPPER}}_UNKNOWN_LINUX_MUSL_LINKER=$TARGET_CC" >> $GITHUB_ENV
    - name: setup rust
      run: rustup update && rustup target add $CARGO_BUILD_TARGET && curl --proto '=https' --tlsv1.2 -sSf https://musl.cc/$MUSL_TOOLCHAIN_NAME-${{matrix.MUSL_TOOLCHAIN_TYPE}}.tgz | tar -xz && pwd
    - name: clone
      run: rm -rf oyster-image-builder && git clone https://github.com/marlinprotocol/oyster-image-builder.git
    - name: checkout
      run: cd oyster-image-builder && git checkout master
    - name: build
      run: cd oyster-image-builder && cargo build --release
    - name: aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - name: upload enclave-builder
      id: enclave-builder
#       if: ${{github.event.inputs.enclave-builder-version != 'X.Y.Z-beta.U'}}
      run: |
        echo "::set-output name=checksum::$(md5sum oyster-image-builder/target/$CARGO_BUILD_TARGET/release/oyster_image_builder | awk '{print $1;}')"
        aws s3 cp oyster-image-builder/target/$CARGO_BUILD_TARGET/release/oyster_image_builder s3://public.artifacts.marlin.pro/projects/enclaves/enclave-builder_${{github.event.inputs.enclave-builder-version}}_${{matrix.GOOS}}_${{matrix.GOARCH}}
